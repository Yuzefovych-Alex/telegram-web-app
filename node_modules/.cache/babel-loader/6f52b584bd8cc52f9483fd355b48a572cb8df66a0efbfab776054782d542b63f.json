{"ast":null,"code":"var _jsxFileName = \"/home/pacmen/Documents/GitHub/telegram-web-app/src/components/table/Table.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:3001/api/tasks\");\n        setTasks(res.data);\n      } catch (err) {\n        console.error(\"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∑–∞–¥–∞—á:\", err);\n        setError(\"–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–∞–¥–∞—á—ñ\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const updateTask = async (taskId, updatedFields) => {\n    try {\n      await axios.patch(`http://localhost:3001/api/tasks/${taskId}`, updatedFields);\n      setTasks(prev => prev.map(task => task.id === taskId ? {\n        ...task,\n        ...updatedFields\n      } : task));\n    } catch (err) {\n      console.error(\"–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–¥–∞—á—ñ:\", err);\n      setError(\"–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –∑–∞–¥–∞—á—É\");\n    }\n  };\n  const toggleComplete = taskId => {\n    const task = tasks.find(t => t.id === taskId);\n    if (!task) return;\n    const newStatus = task.status === \"done\" ? \"todo\" : \"done\";\n    updateTask(taskId, {\n      status: newStatus\n    });\n  };\n  const handleStatusChange = (taskId, newStatus) => {\n    updateTask(taskId, {\n      status: newStatus\n    });\n  };\n  const formatStatus = status => {\n    switch (status) {\n      case \"todo\":\n        return \"To Do\";\n      case \"in_progress\":\n        return \"In Progress\";\n      case \"done\":\n        return \"Done\";\n      default:\n        return status;\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u0437\\u0430\\u0434\\u0430\\u0447...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 22\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"task-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u2714\\uFE0F \\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uD83D\\uDCDD \\u041D\\u0430\\u0437\\u0432\\u0430 \\u0417\\u0430\\u0434\\u0430\\u0447\\u0456\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u26A1 \\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: `task-row ${task.status === \"done\" ? \"completed\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.status === \"done\",\n            onChange: () => toggleComplete(task.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"task-name\",\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"task-status\",\n            value: task.status,\n            onChange: e => handleStatusChange(task.id, e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"todo\",\n              children: formatStatus(\"todo\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"in_progress\",\n              children: formatStatus(\"in_progress\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"done\",\n              children: formatStatus(\"done\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, this);\n};\n_s(Table, \"qwRs5Xd4E7WtXCZK9zh6nomhOw4=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Table","_s","tasks","setTasks","loading","setLoading","error","setError","fetchTasks","res","get","data","err","console","updateTask","taskId","updatedFields","patch","prev","map","task","id","toggleComplete","find","t","newStatus","status","handleStatusChange","formatStatus","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","checked","onChange","title","value","e","target","_c","$RefreshReg$"],"sources":["/home/pacmen/Documents/GitHub/telegram-web-app/src/components/table/Table.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Table.css\";\n\ninterface Task {\n\tid: number;\n\ttitle: string;\n\tstatus: \"todo\" | \"in_progress\" | \"done\";\n\tcompletedAt?: string | null;\n\tcreatedAt: string;\n\tupdatedAt: string;\n}\n\nconst Table: React.FC = () => {\n\tconst [tasks, setTasks] = useState<Task[]>([]);\n\tconst [loading, setLoading] = useState<boolean>(true);\n\tconst [error, setError] = useState<string | null>(null);\n\n\tuseEffect(() => {\n\t\tconst fetchTasks = async () => {\n\t\t\ttry {\n\t\t\t\tconst res = await axios.get<Task[]>(\"http://localhost:3001/api/tasks\");\n\t\t\t\tsetTasks(res.data);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(\"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∑–∞–¥–∞—á:\", err);\n\t\t\t\tsetError(\"–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–∞–¥–∞—á—ñ\");\n\t\t\t} finally {\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t};\n\n\t\tfetchTasks();\n\t}, []);\n\n\tconst updateTask = async (taskId: number, updatedFields: Partial<Task>) => {\n\t\ttry {\n\t\t\tawait axios.patch(`http://localhost:3001/api/tasks/${taskId}`, updatedFields);\n\t\t\tsetTasks(prev =>\n\t\t\t\tprev.map(task =>\n\t\t\t\t\ttask.id === taskId ? { ...task, ...updatedFields } : task\n\t\t\t\t)\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tconsole.error(\"–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–¥–∞—á—ñ:\", err);\n\t\t\tsetError(\"–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –∑–∞–¥–∞—á—É\");\n\t\t}\n\t};\n\n\tconst toggleComplete = (taskId: number) => {\n\t\tconst task = tasks.find(t => t.id === taskId);\n\t\tif (!task) return;\n\n\t\tconst newStatus: Task[\"status\"] = task.status === \"done\" ? \"todo\" : \"done\";\n\t\tupdateTask(taskId, { status: newStatus });\n\t};\n\n\tconst handleStatusChange = (taskId: number, newStatus: Task[\"status\"]) => {\n\t\tupdateTask(taskId, { status: newStatus });\n\t};\n\n\tconst formatStatus = (status: Task[\"status\"]) => {\n\t\tswitch (status) {\n\t\t\tcase \"todo\":\n\t\t\t\treturn \"To Do\";\n\t\t\tcase \"in_progress\":\n\t\t\t\treturn \"In Progress\";\n\t\t\tcase \"done\":\n\t\t\t\treturn \"Done\";\n\t\t\tdefault:\n\t\t\t\treturn status;\n\t\t}\n\t};\n\n\tif (loading) return <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–¥–∞—á...</p>;\n\tif (error) return <p className=\"error\">{error}</p>;\n\n\treturn (\n\t\t<table className=\"task-table\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>‚úîÔ∏è –ó–∞–≤–µ—Ä—à–µ–Ω–æ</th>\n\t\t\t\t\t<th>üìù –ù–∞–∑–≤–∞ –ó–∞–¥–∞—á—ñ</th>\n\t\t\t\t\t<th>‚ö° –°—Ç–∞—Ç—É—Å</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{tasks.map(task => (\n\t\t\t\t\t<tr key={task.id} className={`task-row ${task.status === \"done\" ? \"completed\" : \"\"}`}>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tchecked={task.status === \"done\"}\n\t\t\t\t\t\t\t\tonChange={() => toggleComplete(task.id)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td className=\"task-name\">{task.title}</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tclassName=\"task-status\"\n\t\t\t\t\t\t\t\tvalue={task.status}\n\t\t\t\t\t\t\t\tonChange={(e) => handleStatusChange(task.id, e.target.value as Task[\"status\"])}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"todo\">{formatStatus(\"todo\")}</option>\n\t\t\t\t\t\t\t\t<option value=\"in_progress\">{formatStatus(\"in_progress\")}</option>\n\t\t\t\t\t\t\t\t<option value=\"done\">{formatStatus(\"done\")}</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t))}\n\t\t\t</tbody>\n\t\t</table>\n\t);\n};\n\nexport default Table;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}