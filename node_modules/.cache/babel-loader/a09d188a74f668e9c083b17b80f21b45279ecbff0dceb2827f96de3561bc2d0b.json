{"ast":null,"code":"var _jsxFileName = \"/home/pacmen/Documents/GitHub/telegram-web-app/src/components/table/Table.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:3001/api/tasks\");\n        setTasks(res.data);\n      } catch (err) {\n        console.error(\"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∑–∞–¥–∞—á:\", err);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const toggleComplete = async taskId => {\n    const taskToUpdate = tasks.find(task => task.id === taskId);\n    if (!taskToUpdate) return;\n    const newStatus = taskToUpdate.status === 'done' ? 'todo' : 'done';\n    try {\n      await axios.put(`http://localhost:3001/api/tasks/${taskId}`, {\n        status: newStatus\n      });\n      setTasks(prev => prev.map(task => task.id === taskId ? {\n        ...task,\n        status: newStatus\n      } : task));\n    } catch (err) {\n      console.error(\"–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É:\", err);\n    }\n  };\n  const handlePriorityChange = async (taskId, newStatus) => {\n    try {\n      await axios.put(`http://localhost:3001/api/tasks/${taskId}`, {\n        status: newStatus\n      });\n      setTasks(prev => prev.map(task => task.id === taskId ? {\n        ...task,\n        status: newStatus\n      } : task));\n    } catch (err) {\n      console.error(\"–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É:\", err);\n    }\n  };\n  const formatStatus = status => {\n    switch (status) {\n      case 'todo':\n        return 'todo';\n      case 'in_progress':\n        return 'in progress';\n      case 'done':\n        return 'done';\n      default:\n        return status;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"task-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u2714\\uFE0F \\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\uD83D\\uDCDD \\u041D\\u0430\\u0437\\u0432\\u0430 \\u0417\\u0430\\u0434\\u0430\\u0447\\u0456\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u26A1 \\u041F\\u0440\\u0456\\u043E\\u0440\\u0438\\u0442\\u0435\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: `task-row ${task.status === \"done\" ? \"completed\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.status === \"done\",\n            onChange: () => toggleComplete(task.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"task-name\",\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"task-priority\",\n            value: task.status,\n            onChange: e => handlePriorityChange(task.id, e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"todo\",\n              children: formatStatus('todo')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"in_progress\",\n              children: formatStatus('in_progress')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"done\",\n              children: formatStatus('done')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Table, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Table","_s","tasks","setTasks","fetchTasks","res","get","data","err","console","error","toggleComplete","taskId","taskToUpdate","find","task","id","newStatus","status","put","prev","map","handlePriorityChange","formatStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","title","value","e","target","_c","$RefreshReg$"],"sources":["/home/pacmen/Documents/GitHub/telegram-web-app/src/components/table/Table.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Table.css\";\n\nfunction Table() {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:3001/api/tasks\");\n        setTasks(res.data);\n      } catch (err) {\n        console.error(\"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∑–∞–¥–∞—á:\", err);\n      }\n    };\n\n    fetchTasks();\n  }, []);\n\n  const toggleComplete = async (taskId) => {\n    const taskToUpdate = tasks.find(task => task.id === taskId);\n    if (!taskToUpdate) return;\n\n    const newStatus = taskToUpdate.status === 'done' ? 'todo' : 'done';\n\n    try {\n      await axios.put(`http://localhost:3001/api/tasks/${taskId}`, { status: newStatus });\n\n      setTasks(prev =>\n        prev.map(task =>\n          task.id === taskId ? { ...task, status: newStatus } : task\n        )\n      );\n    } catch (err) {\n      console.error(\"–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É:\", err);\n    }\n  };\n\n  const handlePriorityChange = async (taskId, newStatus) => {\n    try {\n      await axios.put(`http://localhost:3001/api/tasks/${taskId}`, { status: newStatus });\n\n      setTasks(prev =>\n        prev.map(task =>\n          task.id === taskId ? { ...task, status: newStatus } : task\n        )\n      );\n    } catch (err) {\n      console.error(\"–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É:\", err);\n    }\n  };\n\n  const formatStatus = (status) => {\n    switch (status) {\n      case 'todo': return 'todo';\n      case 'in_progress': return 'in progress';\n      case 'done': return 'done';\n      default: return status;\n    }\n  };\n\n  return (\n    <table className=\"task-table\">\n      <thead>\n        <tr>\n          <th>‚úîÔ∏è –ó–∞–≤–µ—Ä—à–µ–Ω–æ</th>\n          <th>üìù –ù–∞–∑–≤–∞ –ó–∞–¥–∞—á—ñ</th>\n          <th>‚ö° –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç</th>\n        </tr>\n      </thead>\n      <tbody>\n        {tasks.map(task => (\n          <tr\n            key={task.id}\n            className={`task-row ${task.status === \"done\" ? \"completed\" : \"\"}`}\n          >\n            <td>\n              <input\n                type=\"checkbox\"\n                checked={task.status === \"done\"}\n                onChange={() => toggleComplete(task.id)}\n              />\n            </td>\n            <td className=\"task-name\">{task.title}</td>\n            <td>\n              <select\n                className=\"task-priority\"\n                value={task.status}\n                onChange={(e) => handlePriorityChange(task.id, e.target.value)}\n              >\n                <option value=\"todo\">{formatStatus('todo')}</option>\n                <option value=\"in_progress\">{formatStatus('in_progress')}</option>\n                <option value=\"done\">{formatStatus('done')}</option>\n              </select>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}